/* eslint max-len: ["error", { "code": 80000 }] */
import React from 'react';
import * as cn from 'classnames';
import * as PropTypes from 'prop-types';
import NumberAbbreviate from 'number-abbreviate';

import './chip.scss';

const numberAbbr = new NumberAbbreviate(['K', 'M', 'B', 'T']);

function Chip({
    nominal, color, onClick, className, precision, decimal, width, height,
}) {
    const nominalSymbol = numberAbbr.abbreviate(nominal.toFixed(decimal), precision).toString();
    const nominalSymbolLength = nominalSymbol.length;
    const smFontLength = 4;
    const nominalFontSize = [28, 25];
    const fontSize = nominalSymbolLength >= smFontLength ? nominalFontSize[1] : nominalFontSize[0];
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 100 100"
            width={width}
            height={height}
            fill="none"
            className={cn({ Chip: true, [color]: true, [className]: !!className })}
            onClick={onClick}
        >
            <circle cx="50" cy="50" r="50" fill="#fff"/>
            <path className="background" d="M99.009 49.621C99.009 76.688 77.066 98.63 50 98.63 22.933 98.63.991 76.688.991 49.621S22.933.612 50 .612c27.066 0 49.009 21.942 49.009 49.009zm-41.146 44.5l-1.348-7.675a38.023 38.023 0 01-9.462.45l-.605 7.77a45.575 45.575 0 0011.415-.545zm-13.638-7.553a32.734 32.734 0 01-.698-.115l-1.345 7.676c.284.049.568.097.853.141l1.19-7.702zm17.833 6.608l-2.074-7.511c-.908.25-1.84.47-2.77.651l1.496 7.647a44.701 44.701 0 003.348-.787zm-27.57-9.524a36.884 36.884 0 01-2.544-1.281l-3.768 6.821c1 .553 2.035 1.073 3.075 1.548l3.237-7.088zm-3.164-1.631a37.62 37.62 0 01-7.535-5.734l-5.464 5.556a45.38 45.38 0 009.1 6.927l3.899-6.749zM73.35 88.31l-4.034-6.666c-.202.122-.407.242-.611.361l3.907 6.742c.247-.143.493-.289.738-.437zm11.265-9.649l-5.968-5.011a37.628 37.628 0 01-6.954 6.428l4.527 6.343a45.409 45.409 0 008.395-7.76zm-62.781-4.447a39.8 39.8 0 01-.462-.54l-5.965 5.014c.184.22.371.438.56.653l5.867-5.127zm65.387 1.028l-6.415-4.425a37.498 37.498 0 01-1.705 2.283l6.062 4.896a45.618 45.618 0 002.058-2.754zM16.243 65.72a37.568 37.568 0 01-1.127-2.609l-7.267 2.813a45.575 45.575 0 001.362 3.155l7.032-3.359zm-1.377-3.275a37.166 37.166 0 01-2.085-9.227l-7.757.739a44.996 44.996 0 002.523 11.16l7.319-2.672zm77.892 1.815l-7.374-2.523c-.076.226-.155.45-.237.674l7.323 2.664c.098-.271.194-.543.288-.815zM95 49.621V49h-8v.621c0 3.183-.201 6.342-.99 9.392l7.543 1.951A45.355 45.355 0 0095 49.621zm-82.382.753a42.254 42.254 0 01-.008-.712l-7.792.008c0 .287.003.574.009.859l7.791-.155zm82.554-1.708a45.664 45.664 0 00-.2-3.43l-7.756.747c.09.941.146 1.898.166 2.844l7.79-.161zm-80.57-11.122l-7.375-2.515a44.708 44.708 0 00-.985 3.297l7.546 1.943c.235-.915.509-1.831.814-2.725zm4.569-9.086l-6.42-4.417a45.087 45.087 0 00-5.238 10.172l7.326 2.657a37.309 37.309 0 014.332-8.412zm73.267 5.624c-.099-.271-.2-.539-.304-.807l-7.266 2.817c.086.221.17.442.251.665l7.319-2.675zm-1.67-3.963a45.232 45.232 0 00-6.207-9.603l-5.958 5.022a37.44 37.44 0 015.138 7.948l7.027-3.367zm-69.442-4.495l-5.971-5.006c-.185.22-.367.442-.547.666l6.066 4.89c.148-.185.299-.368.452-.55zm62.675-5.76a46.421 46.421 0 00-2.361-2.499l-5.457 5.563a37.12 37.12 0 011.956 2.07l5.862-5.134zm-53.352-2.243l-4.04-6.664a45.386 45.386 0 00-2.87 1.892l4.533 6.338c.77-.55 1.57-1.077 2.377-1.566zm9.329-4.033L37.894 6.08a44.99 44.99 0 00-10.546 4.439l3.912 6.74a37.204 37.204 0 018.718-3.671zm32.555-3.138a49.955 49.955 0 00-.751-.423l-3.762 6.824c.208.115.415.231.621.351l3.892-6.752zm-3.827-1.969a44.905 44.905 0 00-10.938-3.377l-1.331 7.678c3.119.541 6.16 1.48 9.039 2.791l3.23-7.092zm-25.261 4.322l-1.356-7.674c-.283.05-.565.103-.846.158l1.503 7.646c.232-.045.465-.088.699-.13zm13.473-7.838a45.916 45.916 0 00-3.415-.393l-.597 7.77c.943.072 1.896.182 2.828.325l1.184-7.702zM50 16.776c-18.14 0-32.845 14.705-32.845 32.845 0 18.141 14.705 32.846 32.845 32.846s32.846-14.705 32.846-32.846c0-18.14-14.706-32.845-32.846-32.845zm34.014 32.845c0-18.755-15.258-34.014-34.014-34.014-18.755 0-34.014 15.259-34.014 34.014 0 18.756 15.259 34.014 34.014 34.014 18.756 0 34.014-15.258 34.014-34.014zm-2.337 0c0 17.466-14.211 31.677-31.677 31.677-17.467 0-31.677-14.211-31.677-31.677S32.533 17.945 50 17.945c17.466 0 31.677 14.21 31.677 31.676z"/>
            <circle className="background" cx="50" cy="49.621" r="28.973"/>
            <text x="50.535" y="50.535" fill="#127CC9" className="nominal" alignmentBaseline="middle" fontSize={fontSize} strokeWidth="0" stroke="#000" textAnchor="middle">
                { nominalSymbol }
            </text>
        </svg>
    );
}

Chip.defaultProps = {
    nominal: 1,
    color: 'blue',
    onClick: (e) => { console.log('Chip: ', e); },
    className: '',
    precision: 1,
    decimal: 2,
    width: 80,
    height: 80,
};

Chip.propTypes = {
    nominal: PropTypes.number,
    color: PropTypes.oneOf(['blue', 'green', 'orange', 'red', 'purple', 'dark']),
    onClick: PropTypes.func,
    className: PropTypes.string,
    precision: PropTypes.number,
    decimal: PropTypes.number,
    width: PropTypes.number,
    height: PropTypes.number,
};

export default Chip;
